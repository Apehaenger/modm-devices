#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import argparse
import sys

import glob
import pprint

rootpath = os.path.join(os.path.dirname(os.path.realpath(__file__)), "..")
sys.path.append(rootpath)

import modm.parser

if __name__ == '__main__':

    arg = argparse.ArgumentParser(description='Device Platform Generator')
    arg.add_argument('-i', '--input', dest='input', required=True, help='XML device description.')
    arg.add_argument('-o', '--output', dest='output', required=True, help='Output folder')

    args = arg.parse_args()

    try:
        device_count = 0
        devices = {}
        device_file_names = glob.glob(os.path.join(args.input, "devices/**/*.xml"))
        device_file_names = glob.glob(os.path.join(args.input, "devices/stm32/stm32f303-c_k_r-6_8.xml"))
        parser = modm.parser.DeviceParser()
        for device_file_name in device_file_names:
            device_file = parser.parse(device_file_name)
            for d in device_file.get_devices():
                device_count += 1
                devices[d.partname] = d

        print()
        print("Total:", device_count, "devices")
        print()

        device = devices["stm32f303k6"]
        pprint.pprint(device.properties)

    except (modm.ParserException) as e:
        print(e)
        exit(1)
