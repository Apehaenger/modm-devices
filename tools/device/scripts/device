#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import argparse
import sys

import glob

rootpath = os.path.join(os.path.dirname(os.path.realpath(__file__)), "..")
sys.path.append(rootpath)

import device
import device.pkg

if __name__ == '__main__':

    arg = argparse.ArgumentParser(description='Device Platform Generator')
    arg.add_argument('-i', '--input', dest='input', required=True, help='XML device description.')
    arg.add_argument('-o', '--output', dest='output', required=True, help='Output folder')

    args = arg.parse_args()

    try:
        device_count = 0
        device_files = glob.glob(os.path.join(args.input, "devices/**/*.xml"))
        for device_file in device_files:
            print(device_file)
            parser = device.parser.Parser()
            rootnode = parser.parse(device_file)
            devices = parser.get_devices(rootnode)
            
            device_count += len(devices)
            #for d in devices:
            #   print(d)
        #print(device_count)
        
        driver_files = glob.glob(os.path.join(args.input, "driver/**/*.xml"), recursive=True)
        for driver_file in driver_files:
            print(driver_file)
            parser = device.parser.Parser()
            rootnode = parser.parse(driver_file, device.pkg.get_filename('device', 'resources/schema/driver.xsd'))

        
        
    except (device.ParserException) as e:
        print(e)
        exit(1)
